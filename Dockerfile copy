### STAGE 1:BUILD ###
# Defining a node image to be used as giving it an alias of "build"
# Which version of Node image to use depends on project dependencies 
# This is needed to build and compile our code 
# while generating the docker image
FROM node:18.20.4-alpine AS build
# Create a Virtual directory inside the docker image
WORKDIR /dist/src/app
# Copy files to virtual directory
# COPY package.json package-lock.json ./
# Run command in Virtual directory
RUN npm cache clean --force
# Copy files from local machine to virtual directory in docker image
COPY . .
RUN npm install
RUN npm run build --prod


### STAGE 2:RUN ###
# Defining nginx image to be used
FROM nginx:latest AS ngi
EXPOSE 80
EXPOSE 443
RUN apt update
RUN apt install -y certbot python3-certbot-nginx unzip
# Copying compiled code and nginx config to different folder
# NOTE: This path may change according to your project's output folder 
#COPY --from=build /dist/src/app/nginxconfig.io-fthyldz.site.tar.gz /app/nginxconfig.io-fthyldz.site.tar.gz
COPY --from=build /dist/src/app/dist/angular-client/browser /var/www/fthyldz.site/public
COPY --from=build /dist/src/app/nginxconfig.io-fthyldz.site.zip /etc/nginx
WORKDIR /etc/nginx
#RUN tar -xzvf /app/nginxconfig.io-fthyldz.site.tar.gz | xargs chmod 0644
RUN unzip -o nginxconfig.io-fthyldz.site.zip
RUN openssl dhparam -out /etc/nginx/dhparam.pem 2048
RUN mkdir -p /var/www/_letsencrypt
RUN chown www-data /var/www/_letsencrypt
RUN sed -i -r 's/(listen .*443)/\1;#/g; s/(ssl_(certificate|certificate_key|trusted_certificate) )/#;#\1/g' /etc/nginx/sites-available/fthyldz.site.conf
CMD ["nginx", "-g", "daemon off;"]
#RUN certbot certonly --webroot -d fthyldz.site --email fth.yldz@outlook.com.tr -w /var/www/_letsencrypt -n --agree-tos --force-renewal
#RUN sed -i -r 's/#?;#//g' /etc/nginx/sites-available/fthyldz.site.conf
#CMD nginx -t && nginx -s reload
#RUN echo -e '#!/bin/bash\nnginx -t && systemctl reload nginx' | tee /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
#RUN chmod a+x /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
#CMD nginx -t && nginx -s reload
#RUN certbot certonly --webroot -d fthyldz.site -d www.fthyldz.site -d cdn.fthyldz.site --email info@fthyldz.site -w /var/www/_letsencrypt -n --agree-tos --force-renewal
#RUN sed -i -r -z 's/#?; ?#//g' /etc/nginx/sites-available/fthyldz.site.conf
#CMD ["nginx", "-s", "reload"]
#RUN echo -e '#!/bin/bash\nnginx -t && systemctl reload nginx' | tee /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
#RUN chmod a+x /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
#CMD ["nginx", "-s", "reload"]
# Exposing a port, here it means that inside the container 
# the app will be using Port 80 while running